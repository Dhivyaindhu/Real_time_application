# -*- coding: utf-8 -*-
"""Untitled144.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UrbXQ4_5b1_v5wMj0DB-geKg6Dal9eyu
"""

import streamlit as st
import requests
import os
import re
from typing import Optional, Tuple
from PIL import Image
import io

# OCR Class
class SimpleBillOCR:
    def __init__(self, api_key: str):
        self.api_key = api_key

    def extract_text(self, image_bytes: bytes) -> Optional[str]:
        """Extract text from image using OCR.space API"""
        try:
            url = 'https://api.ocr.space/parse/image'
            response = requests.post(
                url,
                files={'file': image_bytes},
                data={
                    'apikey': self.api_key,
                    'language': 'eng',
                    'detectOrientation': 'true',
                    'scale': 'true',
                    'OCREngine': '2'
                },
                timeout=30
            )
            result = response.json()

            if result.get('IsErroredOnProcessing'):
                return None

            return result['ParsedResults'][0]['ParsedText']

        except Exception as e:
            return None

    def find_total(self, text: str) -> Tuple[Optional[float], Optional[str]]:
        """Find the total amount in the extracted text"""
        if not text:
            return None, None

        lines = [line.strip() for line in text.split('\n') if line.strip()]
        patterns = [
            r'(?:total|amount|sum)\s*[:.]?\s*[\$]?\s*([\d,]+(?:\.\d{0,2})?)',
            r'(?:grand|final|sub)?\s*total\s*[:.]?\s*([\d,]+(?:\.\d{0,2})?)'
        ]

        for line in lines:
            for pattern in patterns:
                match = re.search(pattern, line.lower())
                if match:
                    amount_str = match.group(1)
                    try:
                        amount = float(amount_str.replace(',', ''))
                        return amount, line
                    except ValueError:
                        continue

        return None, None


# Streamlit UI
st.title("üßæ Bill OCR Extractor")
st.write("Upload a bill image, and this app will extract the total amount.")

# API Key (You can replace this with your own)
API_KEY = "K86357886788957"
ocr = SimpleBillOCR(API_KEY)

uploaded_file = st.file_uploader("Choose an image...", type=['png', 'jpg', 'jpeg'])

if uploaded_file:
    # Display the uploaded image
    image = Image.open(uploaded_file)
    st.image(image, caption="Uploaded Image", use_column_width=True)

    # Convert image to bytes
    img_bytes = uploaded_file.getvalue()

    # Extract text
    st.write("Processing OCR...")
    extracted_text = ocr.extract_text(img_bytes)

    if extracted_text:
        st.subheader("Extracted Text:")
        st.text_area("OCR Result:", extracted_text, height=200)

        # Find total
        total_amount, matched_text = ocr.find_total(extracted_text)

        if total_amount is not None:
            st.success(f"üí∞ Total Amount Found: **{total_amount:.2f}**")
            st.write(f"Matched Text: `{matched_text}`")
        else:
            st.warning("‚ö†Ô∏è Could not find the total amount.")
    else:
        st.error("‚ùå Failed to extract text. Try another image.")