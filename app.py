# -*- coding: utf-8 -*-
"""Untitled144.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UrbXQ4_5b1_v5wMj0DB-geKg6Dal9eyu
"""

import streamlit as st
import requests
import os
import re
import tempfile
from typing import Optional, Tuple

class SimpleBillOCR:
    def __init__(self, api_key: str):
        self.api_key = api_key

    def extract_text(self, image_path: str) -> Optional[str]:
        """Extract text from image using OCR.space API"""
        try:
            url = 'https://api.ocr.space/parse/image'
            with open(image_path, 'rb') as image_file:
                response = requests.post(
                    url,
                    files={'file': image_file},
                    data={'apikey': self.api_key, 'language': 'eng'},
                    timeout=30
                )
            result = response.json()
            if result.get('IsErroredOnProcessing'):
                return None
            return result['ParsedResults'][0]['ParsedText']
        except Exception as e:
            return None

    def find_total(self, text: str) -> Tuple[Optional[float], Optional[str]]:
        """Extract total amount from OCR text"""
        if not text:
            return None, None
        lines = [line.strip() for line in text.split('\n') if line.strip()]
        pattern = r'(?:total|amount due|grand total)[\s:]*([\d,]+\.\d{2})'
        for line in lines:
            match = re.search(pattern, line, re.IGNORECASE)
            if match:
                return float(match.group(1).replace(',', '')), line
        return None, None

def main():
    st.title("Bill Amount Extractor using OCR")

    API_KEY = "K86357886788957"
    processor = SimpleBillOCR(API_KEY)

    uploaded_file = st.file_uploader("Upload a bill image", type=["png", "jpg", "jpeg"])

    if uploaded_file is not None:
        with tempfile.NamedTemporaryFile(delete=False) as temp_file:
            temp_file.write(uploaded_file.read())
            temp_file_path = temp_file.name

        st.image(uploaded_file, caption="Uploaded Image", use_column_width=True)

        ocr_text = processor.extract_text(temp_file_path)
        if ocr_text:
            total_amount, matched_text = processor.find_total(ocr_text)
            st.subheader("Extracted Text")
            st.text_area("OCR Output", ocr_text, height=200)
            if total_amount:
                st.success(f"Total Amount: â‚¹{total_amount:.2f}")
                st.write(f"Matched Text: {matched_text}")
            else:
                st.warning("Could not find a total amount in the receipt.")
        else:
            st.error("Failed to extract text from the image.")

if __name__ == "__main__":
    main()